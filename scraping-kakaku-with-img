import json
import requests
from bs4 import BeautifulSoup
import boto3
import time
import io
import base64

BUCKET_NAME = "llm-chatbot-s3"
DYNAMODB_TABLE_NAME = 'ScrapingPhoneStatus'
dynamodb = boto3.resource('dynamodb')
dynamo_table = dynamodb.Table(DYNAMODB_TABLE_NAME)

def get_img_from_s3(object_key_name):
    s3 = boto3.client('s3')
    response = s3.get_object(Bucket=BUCKET_NAME, Key=object_key_name)
    body = response['Body'].read()
    body = base64.b64encode(body)
    return body

def upload_img_to_s3_from_url(url, object_name):
    try:
        res = requests.get(url)
        res.raise_for_status()
        img = io.BytesIO(res.content)
        if int(res.content.__sizeof__()) < 1.0 * 1024 * 1024:
            s3 = boto3.client('s3')
            s3.upload_fileobj(img, BUCKET_NAME, object_name)
    except requests.exceptions.RequestException as e:
        print(f"Error: {e}")

def extract_text_from_elements(elements):
    return [element.text for element in elements]

def scrape_phone_specs(url):
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    elemsName = soup.find_all(class_="p-hikakuTbl_item-name")
    elemsSpec = soup.find_all(class_="p-data_cell")
    elemsFeatureTitle = soup.find_all(class_="p-feature_ttl")
    elemsFeatureSent = soup.find_all(class_="p-feature_readTxt")
    elemsExtraFeatureTitle = soup.select('.p-spec_table.p-feature_aside_table th')
    elemsExtraFeatureSent = soup.select('.p-spec_table.p-feature_aside_table td')
    imgSrc = soup.find_all(class_="p-main_thumb-main-img")[0]["src"]
    
    return {
        "elemsName": elemsName,
        "elemsSpec": elemsSpec,
        "elemsFeatureTitle": elemsFeatureTitle,
        "elemsFeatureSent": elemsFeatureSent,
        "elemsExtraFeatureTitle": elemsExtraFeatureTitle,
        "elemsExtraFeatureSent": elemsExtraFeatureSent,
        "imgSrc": imgSrc
    }

def process_phone_data(phone_data, full_url):
    elemsName = phone_data["elemsName"]
    elemsSpec = phone_data["elemsSpec"]
    elemsFeatureTitle = phone_data["elemsFeatureTitle"]
    elemsFeatureSent = phone_data["elemsFeatureSent"]
    elemsExtraFeatureTitle = phone_data["elemsExtraFeatureTitle"]
    elemsExtraFeatureSent = phone_data["elemsExtraFeatureSent"]
    imgSrc = phone_data["imgSrc"]

    elemsFeatureTitle.pop()
    elemsFeatureTitle = ['@#$%^'.join(extract_text_from_elements(elemsFeatureTitle))]
    elemsFeatureSent = ['@#$%^'.join(extract_text_from_elements(elemsFeatureSent))]
    elemsExtraFeatureTitle = ['@#$%^'.join(extract_text_from_elements(elemsExtraFeatureTitle))]
    elemsExtraFeatureSent = ['@#$%^'.join(extract_text_from_elements(elemsExtraFeatureSent))]

    elemsPhone = [elemsName[0].text] + [elemsSpec[i - 1].text for i in range(1, len(elemsSpec) + 1)]
    elemsPhone = ['対応' if elem == '\n○\n' else elem for elem in elemsPhone]
    elemsPhone.append(full_url)
    elemsPhone = elemsPhone + elemsFeatureTitle + elemsFeatureSent + elemsExtraFeatureTitle + elemsExtraFeatureSent

    return elemsPhone, imgSrc

def save_to_dynamodb(elemsPhone, imgSrc, elemsName):
    new_elemsItemText = ["機種", "発売日", "OS種類?", "CPU", "CPUコア数", "内蔵メモリ(ROM)?", "内蔵メモリ(RAM)", "充電器・充電ケーブル", "外部メモリタイプ", "外部メモリ最大容量", "バッテリー容量", "画面サイズ", "画面解像度", "パネル種類", "背面カメラ画素数", "前面カメラ画素数", "手ブレ補正", "4K撮影対応?", "スローモーション撮影", "撮影用フラッシュ", "複数レンズ", "幅", "高さ", "厚み", "重量", "カラー", "おサイフケータイ/FeliCa", "ワイヤレス充電(Qi)?", "急速充電", "認証機能", "耐水・防水", "防塵", "MIL規格?", "イヤホンジャック", "HDMI端子", "MHL?", "フルセグ", "ワンセグ", "ハイレゾ", "GPS", "センサー", "5G?", "4G・LTE", "無線LAN規格", "テザリング対応?", "Bluetooth", "NFC?", "赤外線通信機能", "デュアルSIM?", "デュアルSIMデュアルスタンバイ(DSDS)?", "デュアルSIMデュアルVoLTE(DSDV)?", "SIM情報", "URL", "特徴タイトル", "特徴本文", "最低価格(円)", "最高価格(円)", "その他の特徴タイトル", "その他の特徴本文"]

    dynamo_item = {new_elemsItemText[i]: elemsPhone[i] for i in range(len(new_elemsItemText))}
    dynamo_table.put_item(Item=dynamo_item)
    upload_img_to_s3_from_url(imgSrc, elemsName[0].text)
    print("追加完了: " + elemsName[0].text)

def lambda_handler(event, context):
    try:
        mother_url = ['https://kakaku.com/keitai/smartphone/?pdf_Spec030=1&pdf_pg=' + str(i) for i in range(1, 13)]
        for url in mother_url:
            response = requests.get(url)
            soup = BeautifulSoup(response.text, 'html.parser')
            elems = soup.find_all(class_="s-biggerlinkBigger")
            href_values = [elem.get('href') for elem in elems]
            full_urls = ['https://kakaku.com/' + href_value + '/spec/' for href_value in href_values]

            for full_url in full_urls:
                try:
                    phone_data = scrape_phone_specs(full_url)
                    elemsPhone, imgSrc = process_phone_data(phone_data, full_url)
                    save_to_dynamodb(elemsPhone, imgSrc, phone_data["elemsName"])
                    time.sleep(1)
                except Exception as e:
                    print('Error during processing individual phone data!')
                    print(e)
                    continue
    except Exception as e:
        print('Error!')
        print(e)
        raise e

    return {
        'statusCode': 200,
        'body': json.dumps('Successfully completed.')
    }
